name: Build and Release

on:
  push:
    tags:
    - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
        - os: linux
          dist: ubuntu
          goos: linux
          goarch: amd64
        - os: linux
          dist: debian
          goos: linux
          goarch: amd64
        - os: linux
          dist: fedora
          goos: linux
          goarch: amd64
        - os: linux
          dist: suse
          goos: linux
          goarch: amd64
        - os: macos
          dist: macos-intel
          goos: darwin
          goarch: amd64
        - os: macos
          dist: macos-silicon
          goos: darwin
          goarch: arm64
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.21'

    - name: Build
      run: |
        GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o netexecgo-${{ matrix.os }}-${{ matrix.goarch }} main.go

    - name: Upload Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: netexecgo-${{ matrix.os }}-${{ matrix.goarch }}
        path: netexecgo-${{ matrix.os }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v2
      with:
        path: ./artifacts

    - name: Prepare Release Files
      run: |
        mkdir release_files
        find ./artifacts -type f -exec mv {} release_files/ \;

    - name: Create Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        files: release_files/*
